function init(self)
	sound.play("/music#sound")
	print(msg.url())
end

function fade_out_music(self, duration)
	local fade_time = duration or 1.0  -- Duración en segundos
	local steps = 10  -- Cuántos pasos de reducción de volumen
	local interval = fade_time / steps  -- Tiempo entre cada paso

	self.music_volume = 1.0  -- Volumen inicial
	self.fade_timer = 0  -- Tiempo acumulado

	timer.delay(interval, true, function()
		self.music_volume = self.music_volume - (1.0 / steps)
		if self.music_volume <= 0 then
			self.music_volume = 0
			timer.cancel(self.fade_timer)  -- Detener el timer
			sound.stop("/music#sound")  -- Detener la música
		end
		sound.set_gain("/music#sound", self.music_volume)
	end)
end

function final(self)
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Fade out music
	if message_id == hash("fade_out_music") then
		fade_out_music(self, message.duration)
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
